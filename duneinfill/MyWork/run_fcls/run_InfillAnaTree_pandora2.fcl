#include "services_dune.fcl"
#include "InfillAnaTreeConfig.fcl"

process_name: InfillAnaTree

source:
{
  module_type: RootInput
  maxEvents:   -1
}

services:
{
  @table::protodune_services
  TFileService: { fileName: "infill_ana_pandora2.root" }
}

physics:
{
  analyzers:
  {
    infillana: @local::InfillAnaTree
  }
  path0:      [ infillana ]
  end_paths:  [ path0 ]
}

services.Geometry: @local::protodune_geo

// Use 'pandora' labelled products
physics.analyzers.infillana.PerfectParticleIDLabel: "pandora2pid::RecoChPerfect"
physics.analyzers.infillana.RealParticleIDLabel:    "pandora2pid::RecoChnov2019"
physics.analyzers.infillana.InfillParticleIDLabel:  "pandora2pid::RecoChnov2019Infill"
physics.analyzers.infillana.PerfectTrackLabel:      "pandora2Track::RecoChPerfect"
physics.analyzers.infillana.RealTrackLabel:         "pandora2Track::RecoChnov2019"
physics.analyzers.infillana.InfillTrackLabel:       "pandora2Track::RecoChnov2019Infill"
physics.analyzers.infillana.PerfectShowerLabel:     "pandora2Shower::RecoChPerfect"
physics.analyzers.infillana.RealShowerLabel:        "pandora2Shower::RecoChnov2019"
physics.analyzers.infillana.InfillShowerLabel:      "pandora2Shower::RecoChnov2019Infill"

// 'pandora2' label does not have all products
physics.analyzers.infillana.DumpParticleID: true
physics.analyzers.infillana.DumpPFParticle: false
physics.analyzers.infillana.DumpTrack:      true
physics.analyzers.infillana.DumpShower:     true

